{"version":3,"file":"index-338ae83d.js","sources":["../../../resources/js/layout/sidebar/Logo.vue","../../../resources/js/hooks/use-layout.js","../../../resources/js/layout/sidebar/Link.vue","../../../resources/js/layout/sidebar/SidebarItem.vue","../../../resources/js/layout/sidebar/index.vue","../../../resources/js/layout/app-main/index.vue","../../../resources/js/layout/app-main/Breadcrumb.vue","../../../resources/js/layout/app-main/Hamburger.vue","../../../resources/js/layout/app-main/Navbar.vue","../../../resources/js/layout/app-main/TagsView.vue","../../../resources/js/layout/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar-logo-container\" :class=\"{ collapse: collapse }\">\r\n    <transition name=\"sidebar-logo-fade\">\r\n      <!--  折叠显示   -->\r\n      <router-link v-if=\"collapse\" class=\"sidebar-logo-link\" to=\"/\">\r\n        <svg-icon v-if=\"logo\" :icon-class=\"logo\" class=\"sidebar-logo\" />\r\n        <h1 v-else class=\"sidebar-title\">{{ title }}</h1>\r\n      </router-link>\r\n      <!--  正常显示   -->\r\n      <router-link v-else class=\"sidebar-logo-link\" to=\"/\">\r\n        <svg-icon v-if=\"logo\" :icon-class=\"logo\" class=\"sidebar-logo\" />\r\n        <h1 class=\"sidebar-title\">{{ title }}</h1>\r\n      </router-link>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { reactive, toRefs } from 'vue'\r\nimport { useBasicStore } from '@/store/auth'\r\nimport SvgIcon from '@/icons/SvgIcon.vue'\r\nconst { settings } = useBasicStore()\r\ndefineProps({\r\n  //是否折叠\r\n  collapse: {\r\n    type: Boolean,\r\n    required: true\r\n  }\r\n})\r\nconst state = reactive({\r\n  title: settings.title,\r\n  //src/icons/common/sidebar-logo.svg\r\n  logo: 'sidebar-logo'\r\n})\r\n//export to page for use\r\nconst { title, logo } = toRefs(state)\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n//vue3.0 过度效果更改  enter-> enter-from   leave-> leave-from\r\n.sidebar-logo-container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  background: var(--sidebar-logo-background);\r\n  padding-left: 14px;\r\n  text-align: left;\r\n  overflow: hidden;\r\n  & .sidebar-logo-link {\r\n    height: 100%;\r\n    width: 100%;\r\n    & .sidebar-logo {\r\n      fill: currentColor;\r\n      color: var(--sidebar-logo-color);\r\n      width: var(--sidebar-logo-width);\r\n      height: var(--sidebar-logo-height);\r\n      vertical-align: middle;\r\n      margin-right: 12px;\r\n    }\r\n    & .sidebar-title {\r\n      display: inline-block;\r\n      margin: 0;\r\n      color: var(--sidebar-logo-title-color);\r\n      font-weight: 600;\r\n      line-height: 50px;\r\n      font-size: 14px;\r\n      font-family: Avenir, Helvetica Neue, Arial, Helvetica, sans-serif;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n  &.collapse {\r\n    .sidebar-logo {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * 判断是否是外链\r\n * @param {string} path\r\n * @returns {Boolean}\r\n */\r\nimport { onBeforeMount, onBeforeUnmount, onMounted } from \"vue\";\r\nimport { useBasicStore } from \"@/store/auth\";\r\nexport function isExternal(path) {\r\n    return /^(https?:|mailto:|tel:)/.test(path);\r\n}\r\n\r\n/*判断窗口变化控制侧边栏收起或展开*/\r\nexport function resizeHandler() {\r\n    const { body } = document;\r\n    const WIDTH = 992;\r\n    const basicStore = useBasicStore();\r\n    const isMobile = () => {\r\n        const rect = body.getBoundingClientRect();\r\n        return rect.width - 1 < WIDTH;\r\n    };\r\n    const resizeHandler = async () => {\r\n        if (!document.hidden) {\r\n            if (isMobile()) {\r\n                /*此处只做根据window尺寸关闭sideBar功能*/\r\n                basicStore.setSidebarOpen(false);\r\n            } else {\r\n                basicStore.setSidebarOpen(true);\r\n            }\r\n            basicStore.toggleDevice(isMobile() ? \"mobile\" : \"desktop\");\r\n        }\r\n    };\r\n    onBeforeMount(() => {\r\n        window.addEventListener(\"resize\", resizeHandler);\r\n    });\r\n    onMounted(() => {\r\n        if (isMobile()) {\r\n            basicStore.toggleDevice(\"mobile\");\r\n            basicStore.setSidebarOpen(false);\r\n            basicStore.closeSideBar({ withoutAnmination: true });\r\n            console.log(\"success\", basicStore.device);\r\n        } else {\r\n            basicStore.setSidebarOpen(true);\r\n        }\r\n        // basicStore.toggleDevice(isMobile() ? \"mobile\" : \"desktop\");\r\n        // basicStore.toggleDevice(isMobile() ? \"mobile\" : \"desktop\");\r\n    });\r\n    onBeforeUnmount(() => {\r\n        window.removeEventListener(\"resize\", resizeHandler);\r\n    });\r\n}\r\n","<template>\r\n  <component :is=\"type\" v-bind=\"linkProps(to)\">\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { isExternal } from '@/hooks/use-layout'\r\n\r\nconst props = defineProps({\r\n  to: { type: String, required: true }\r\n})\r\n//判断是否时外链，true: 使用 <a/>标签， false: <router-link/>\r\nconst type = computed(() => {\r\n  if (isExternal(props.to)) return 'a'\r\n  return 'router-link'\r\n})\r\n//判断是否时外链，true: 返回 <a/>标签跳转属性， false: 直接使用当前路径\r\nconst linkProps = (to) => {\r\n  if (isExternal(props.to)) {\r\n    return {\r\n      href: to,\r\n      target: '_blank',\r\n      //没有rel=“noopener noreferrer”的情况下使用target=“_blank”是有安全风险，超链接a标签的rel=\"noopener noreferrer\"属性是一种新特性，它能让网站更安全\r\n      rel: 'noopener'\r\n    }\r\n  }\r\n  return { to }\r\n}\r\n</script>\r\n","<template>\r\n  <template v-if=\"!item.hidden\">\r\n    <template v-if=\"showSidebarItem(item.children, item)\">\r\n      <Link v-if=\"onlyOneChild.meta\" :to=\"resolvePath(onlyOneChild.path)\">\r\n        <el-menu-item :index=\"resolvePath(onlyOneChild.path)\" :class=\"{ 'submenu-title-noDropdown': !isNest }\">\r\n          <MenuIcon :meta=\"onlyOneChild.meta || item.meta\" />\r\n          <template #title>{{ langTitle(onlyOneChild.meta?.title) }}</template>\r\n        </el-menu-item>\r\n      </Link>\r\n    </template>\r\n    <el-sub-menu v-else :index=\"resolvePath(item.path)\">\r\n      <template v-if=\"item.meta\" #title>\r\n        <MenuIcon :meta=\"item.meta\" />\r\n        <span>{{ langTitle(item.meta.title) }}</span>\r\n      </template>\r\n      <SidebarItem\r\n        v-for=\"child in item.children\"\r\n        :key=\"child.path\"\r\n        :is-nest=\"true\"\r\n        :item=\"child\"\r\n        :base-path=\"resolvePath(child.path)\"\r\n      />\r\n    </el-sub-menu>\r\n  </template>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from 'vue'\r\nimport { resolve } from 'path-browserify'\r\nimport Link from './Link.vue'\r\nimport MenuIcon from './MenuIcon.vue'\r\nimport type { RouteRawConfig } from '~/basic'\r\nimport { isExternal } from '@/hooks/use-layout'\r\nimport { langTitle } from '@/hooks/use-common'\r\nimport FixiOSBug from './FixiOSBug'\r\n\r\nconst props = defineProps({\r\n  //每一个router Item\r\n  item: {\r\n    type: Object,\r\n    required: true\r\n  },\r\n  //用于判断是不是子Item,设置响应的样式\r\n  isNest: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  //基础路径，用于拼接\r\n  basePath: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n})\r\nconst mixins = [FixiOSBug];\r\n//显示sidebarItem 的情况\r\nconst onlyOneChild = ref()\r\nconst showSidebarItem = (children = [], parent) => {\r\n  const showingChildren = children.filter((item: RouteRawConfig) => {\r\n    if (item.hidden) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  })\r\n  if (showingChildren.length === 1 && !parent?.alwaysShow) {\r\n    onlyOneChild.value = showingChildren[0]\r\n    return true\r\n  }\r\n  if (showingChildren.length === 0) {\r\n    onlyOneChild.value = { ...parent, path: '', noChildren: true }\r\n    return true\r\n  }\r\n  return false\r\n}\r\nconst resolvePath = (routePath) => {\r\n  if (isExternal(routePath)) {\r\n    return routePath\r\n  }\r\n  if (isExternal(props.basePath)) {\r\n    return props.basePath\r\n  }\r\n  return resolve(props.basePath, routePath)\r\n}\r\n</script>\r\n","<template>\r\n  <div id=\"Sidebar\" class=\"reset-menu-style\">\r\n    <!--logo-->\r\n    <Logo v-if=\"settings.sidebarLogo\" :collapse=\"!sidebar.opened\" />\r\n    <!--router menu-->\r\n    <el-scrollbar>\r\n      <el-menu\r\n        class=\"el-menu-vertical\"\r\n        :collapse=\"!sidebar.opened\"\r\n        :default-active=\"activeMenu\"\r\n        :collapse-transition=\"false\"\r\n        mode=\"vertical\"\r\n      >\r\n        <sidebar-item v-for=\"route in allRoutes\" :key=\"route.path\" :item=\"route\" :base-path=\"route.path\" />\r\n      </el-menu>\r\n    </el-scrollbar>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from 'vue'\r\nimport { storeToRefs } from 'pinia/dist/pinia'\r\nimport { useRoute } from 'vue-router'\r\nimport Logo from './Logo.vue'\r\nimport SidebarItem from './SidebarItem.vue'\r\nimport { useBasicStore } from '@/store/auth'\r\nconst { settings, allRoutes, sidebar } = storeToRefs(useBasicStore())\r\nconst route = useRoute()\r\nconst activeMenu = computed(() => {\r\n  const { meta, path } = route\r\n  // if set path, the sidebar will highlight the path you set\r\n  if (meta.activeMenu) {\r\n    return meta.activeMenu\r\n  }\r\n  return path\r\n})\r\n</script>\r\n<style lang=\"scss\">\r\n//fix open the item style issue\r\n.el-menu-vertical {\r\n  width: var(--side-bar-width);\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"app-main\" :class=\"{ 'show-tag-view': settings.showTagsView }\">\r\n    <router-view v-slot=\"{ Component }\">\r\n      <!--has transition  setting by settings.mainNeedAnimation-->\r\n      <transition v-if=\"settings.mainNeedAnimation\" name=\"fade-transform\" mode=\"out-in\">\r\n        <keep-alive :include=\"cachedViews\">\r\n          <component :is=\"Component\" :key=\"key\" />\r\n        </keep-alive>\r\n      </transition>\r\n      <!-- no transition -->\r\n      <keep-alive v-else :include=\"cachedViews\">\r\n        <component :is=\"Component\" :key=\"key\" />\r\n      </keep-alive>\r\n    </router-view>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, watch } from 'vue'\r\nimport { storeToRefs } from 'pinia/dist/pinia'\r\nimport { useRoute } from 'vue-router'\r\n\r\nimport { useBasicStore } from '@/store/auth'\r\nimport { cloneDeep } from '@/hooks/use-common'\r\nconst { settings, cachedViews } = storeToRefs(useBasicStore())\r\nconst route = useRoute()\r\nconst key = computed(() => route.path)\r\n/*listen the component name changing, then to keep-alive the page*/\r\n// cachePage: is true, keep-alive this Page\r\n// leaveRmCachePage: is true, keep-alive remote when page leave\r\nlet oldRoute = {}\r\nlet cacheGroup = []\r\nlet deepOldRouter = null\r\nconst basicStore = useBasicStore()\r\nconst removeDeepChildren = (deepOldRouter) => {\r\n  deepOldRouter.children?.forEach((fItem) => {\r\n    basicStore.delCacheViewDeep(fItem.name)\r\n  })\r\n}\r\nwatch(\r\n  () => route.name,\r\n  () => {\r\n    const routerLevel = route.matched.length\r\n    //缓存组处理\r\n    //first judge cacheGroup and then  remove\r\n    if (cacheGroup.length) {\r\n      if (!cacheGroup.includes(route.name)) {\r\n        cacheGroup.forEach((item) => {\r\n          basicStore.delCachedView(item)\r\n        })\r\n      }\r\n    }\r\n    //and then cache the current router config page\r\n    if (route.meta?.cacheGroup) {\r\n      cacheGroup = route.meta?.cacheGroup || []\r\n      cacheGroup.forEach((fItem) => {\r\n        basicStore.addCachedView(fItem)\r\n      })\r\n    }\r\n\r\n    //二级路由处理\r\n    if (routerLevel === 2) {\r\n      if (deepOldRouter?.name) {\r\n        if (deepOldRouter.meta?.leaveRmCachePage && deepOldRouter.meta?.cachePage) {\r\n          basicStore.delCachedView(deepOldRouter.name)\r\n          //remove the deepOldRouter‘s children component\r\n          removeDeepChildren(deepOldRouter)\r\n        }\r\n      } else {\r\n        if (oldRoute?.name) {\r\n          if (oldRoute.meta?.leaveRmCachePage && oldRoute.meta?.cachePage) {\r\n            basicStore.delCachedView(oldRoute.name)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (route.name) {\r\n        if (route.meta?.cachePage) {\r\n          basicStore.addCachedView(route.name)\r\n        }\r\n      }\r\n      deepOldRouter = null\r\n    }\r\n\r\n    //三级路由处理\r\n    if (routerLevel === 3) {\r\n      //三级时存储当前路由对象的上一级\r\n      const parentRoute = route.matched[1]\r\n      //deepOldRouter不为空，且deepOldRouter不是当前路由的父对象，则需要清除deepOldRouter缓存\r\n      //一般为三级路由跳转三级路由的情况\r\n      if (deepOldRouter?.name && deepOldRouter.name !== parentRoute.name) {\r\n        if (deepOldRouter.meta?.leaveRmCachePage && deepOldRouter.meta?.cachePage) {\r\n          basicStore.delCachedView(deepOldRouter.name)\r\n          //remove the deepOldRouter‘s children component\r\n          removeDeepChildren(deepOldRouter)\r\n        }\r\n      } else {\r\n        //否则走正常两级路由处理流程\r\n        if (oldRoute?.name) {\r\n          if (oldRoute.meta?.leaveRmCachePage && oldRoute.meta?.cachePage) {\r\n            basicStore.delCacheViewDeep(oldRoute.name)\r\n          }\r\n        }\r\n      }\r\n      //取的是第二级的name\r\n      if (parentRoute.name && parentRoute.meta?.cachePage) {\r\n        deepOldRouter = parentRoute\r\n        basicStore.addCachedView(deepOldRouter.name)\r\n        if (route.name) {\r\n          if (route.meta?.cachePage) {\r\n            //和第三级的name进行缓存\r\n            basicStore.addCachedViewDeep(route.name)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    oldRoute = cloneDeep({ name: route.name, meta: route.meta })\r\n  },\r\n  { immediate: true }\r\n)\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.app-main {\r\n  min-height: calc(100vh - 50px);\r\n  padding: var(--app-main-padding);\r\n  /*50 = navbar  */\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: var(--app-main-background);\r\n}\r\n.show-tag-view {\r\n  height: calc(100vh - #{var(--nav-bar-height)} - #{var(--tag-view-height)}) !important;\r\n}\r\n.fixed-header + .app-main {\r\n  padding-top: 50px;\r\n}\r\n</style>\r\n","<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <!--  mainNeedAnimation：控制该面包屑是否需要动画  -->\r\n    <transition-group v-if=\"settings.mainNeedAnimation\" name=\"breadcrumb\">\r\n      <!--  根据过滤后的数组生成面包屑  -->\r\n      <el-breadcrumb-item v-for=\"(item, index) in levelList\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect === 'noRedirect' || index === levelList.length - 1\" class=\"no-redirect\">\r\n          {{ langTitle(item.meta?.title) }}\r\n        </span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ langTitle(item.meta?.title) }}</a>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n    <!--no transition-->\r\n    <template v-else>\r\n      <el-breadcrumb-item v-for=\"(item, index) in levelList\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect === 'noRedirect' || index === levelList.length - 1\" class=\"no-redirect\">\r\n          {{ langTitle(item.meta?.title) }}\r\n        </span>\r\n        <a v-else @click.prevent=\"handleLink(item)\">{{ langTitle(item.meta?.title) }}</a>\r\n      </el-breadcrumb-item>\r\n    </template>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch } from 'vue'\r\nimport { compile } from 'path-to-regexp'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport type { RouterTypes } from '~/basic'\r\nimport { useBasicStore } from '@/store/auth'\r\nimport { langTitle } from '@/hooks/use-common'\r\nconst levelList = ref()\r\nconst { settings } = useBasicStore()\r\nconst route = useRoute()\r\nconst getBreadcrumb = () => {\r\n  // only show routes with has  meta.title\r\n  let matched: RouterTypes = route.matched.filter((item) => item.meta?.title)\r\n  //如果首页Dashboard,如果没有，添加Dashboard路由到第一个路由\r\n  const isHasDashboard = matched[0]?.name?.toLocaleLowerCase() === 'Dashboard'.toLocaleLowerCase()\r\n  if (!isHasDashboard) {\r\n    matched = [{ path: '/dashboard', meta: { title: langTitle('dashboard') } }].concat(matched)\r\n  }\r\n  //过滤面包屑显示的数组\r\n  levelList.value = matched.filter((item) => item.meta && item.meta.title && item.meta.breadcrumb !== false)\r\n}\r\n\r\n//页面跳转处理\r\n//compile函数将返回一个用于将参数转换为有效路径的函数：\r\n//const  toPath =  compile ( \"/user/:id\" ,  {  encode : encodeURIComponent  } ) ;\r\n//toPath ( {  id : 123  } ) ; //=> \"/user/123\"\r\nconst pathCompile = (path) => {\r\n  const { params } = route\r\n  const toPath = compile(path)\r\n  return toPath(params)\r\n}\r\nconst router = useRouter()\r\n//如果有redirect地址直接跳转，没有跳转path\r\nconst handleLink = (item) => {\r\n  const { redirect, path } = item\r\n  if (redirect) {\r\n    router.push(redirect)\r\n    return\r\n  }\r\n  if (path) router.push(pathCompile(path))\r\n}\r\n//监听路由路径刷新 面包屑显示数组\r\nwatch(\r\n  () => route.path,\r\n  () => getBreadcrumb(),\r\n  { immediate: true }\r\n)\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-breadcrumb.el-breadcrumb {\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  margin-left: 8px;\r\n\r\n  .no-redirect {\r\n    color: var(--breadcrumb-no-redirect);\r\n    cursor: text;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div style=\"padding: 0 12px\" @click=\"toggleClick\">\r\n    <svg-icon icon-class=\"hamburger\" :class=\"{ 'is-active': isActive }\" class=\"hamburger-style\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport SvgIcon from '@/icons/SvgIcon.vue'\r\ndefineProps({\r\n  isActive: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\nconst emit = defineEmits(['toggleClick'])\r\n//切换左侧栏关闭和隐藏\r\nconst toggleClick = () => {\r\n  emit('toggleClick')\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.hamburger-style {\r\n  color: var(--hamburger-color);\r\n  width: var(--hamburger-width);\r\n  height: var(--hamburger-height);\r\n  cursor: pointer;\r\n  vertical-align: -5px;\r\n}\r\n\r\n.hamburger-style.is-active {\r\n  transform: rotate(180deg);\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"navbar rowBC reset-el-dropdown\">\r\n    <div class=\"rowSC\">\r\n      <!--  切换sidebar按钮  -->\r\n      <hamburger\r\n        v-if=\"settings.showHamburger\"\r\n        :is-active=\"sidebar.opened\"\r\n        class=\"hamburger-container\"\r\n        @toggleClick=\"toggleSideBar\"\r\n      />\r\n      <!--  面包屑导航  -->\r\n      <breadcrumb class=\"breadcrumb-container\" />\r\n    </div>\r\n    <!--导航标题-->\r\n    <div v-if=\"settings.showNavbarTitle\" class=\"heardCenterTitle\">{{ settings.title }}</div>\r\n    <!-- 下拉操作菜单 -->\r\n    <div v-if=\"settings.ShowDropDown\" class=\"right-menu rowSC\">\r\n      <el-dropdown trigger=\"click\" size=\"medium\">\r\n        <div class=\"avatar-wrapper\">\r\n          <img src=\"https://github.jzfai.top/file/images/nav-right-logo.gif\" class=\"user-avatar\" />\r\n          <CaretBottom style=\"width: 1em; height: 1em; margin-left: 4px\" />\r\n        </div>\r\n        <template #dropdown>\r\n          <el-dropdown-menu>\r\n            <router-link to=\"/\">\r\n              <el-dropdown-item>{{ langTitle('Home') }}</el-dropdown-item>\r\n            </router-link>\r\n            <el-dropdown-item divided @click=\"loginOut\">{{ langTitle('logout') }}</el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </template>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { nextTick } from 'vue'\r\nimport { CaretBottom } from '@element-plus/icons-vue'\r\nimport { useRouter } from 'vue-router'\r\nimport Breadcrumb from './Breadcrumb.vue'\r\nimport Hamburger from './Hamburger.vue'\r\nimport { resetState } from '@/hooks/use-permission'\r\nimport { elMessage } from '@/hooks/use-element'\r\nimport { useBasicStore } from '@/store/auth'\r\nimport { langTitle } from '@/hooks/use-common'\r\n\r\nconst basicStore = useBasicStore()\r\nconst { settings, sidebar, setToggleSideBar } = basicStore\r\nconst toggleSideBar = () => {\r\n  setToggleSideBar()\r\n}\r\n//退出登录\r\nconst router = useRouter()\r\nconst loginOut = () => {\r\n  elMessage(langTitle('logout_success'))\r\n  router.push(`/login?redirect=/`)\r\n  nextTick(() => {\r\n    resetState()\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.navbar {\r\n  height: var(--nav-bar-height);\r\n  overflow: hidden;\r\n  position: relative;\r\n  background: var(--nav-bar-background);\r\n  box-shadow: var(--nav-bar-box-shadow);\r\n  z-index: 1;\r\n  .hamburger-container {\r\n    line-height: 46px;\r\n    height: 100%;\r\n    float: left;\r\n    cursor: pointer;\r\n    transition: background .3s;\r\n    -webkit-tap-highlight-color:transparent;\r\n\r\n    &:hover {\r\n      background: rgba(0, 0, 0, .025)\r\n    }\r\n  }\r\n\r\n  .breadcrumb-container {\r\n    float: left;\r\n  }\r\n\r\n  .errLog-container {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n  }\r\n\r\n  .right-menu {\r\n    float: right;\r\n    height: 100%;\r\n    line-height: 50px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n\r\n    .right-menu-item {\r\n      display: inline-block;\r\n      padding: 0 8px;\r\n      height: 100%;\r\n      font-size: 18px;\r\n      color: #5a5e66;\r\n      vertical-align: text-bottom;\r\n\r\n      &.hover-effect {\r\n        cursor: pointer;\r\n        transition: background .3s;\r\n\r\n        &:hover {\r\n          background: rgba(0, 0, 0, .025)\r\n        }\r\n      }\r\n    }\r\n\r\n    .avatar-container {\r\n      margin-right: 30px;\r\n\r\n      .avatar-wrapper {\r\n        margin-top: 5px;\r\n        position: relative;\r\n\r\n        .user-avatar {\r\n          cursor: pointer;\r\n          width: 40px;\r\n          height: 40px;\r\n          border-radius: 10px;\r\n        }\r\n\r\n        .el-icon-caret-bottom {\r\n          cursor: pointer;\r\n          position: absolute;\r\n          right: -20px;\r\n          top: 25px;\r\n          font-size: 12px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//logo\r\n.avatar-wrapper {\r\n  margin-top: 5px;\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  .user-avatar {\r\n    cursor: pointer;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .el-icon-caret-bottom {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    right: -20px;\r\n    top: 25px;\r\n    font-size: 12px;\r\n  }\r\n}\r\n\r\n//center-title\r\n.heardCenterTitle {\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 46%;\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n//drop-down\r\n.right-menu {\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  background-color: var(--nav-bar-right-menu-background);\r\n}\r\n</style>\r\n","<template>\r\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\r\n    <div class=\"tags-view-wrapper\">\r\n      <router-link\r\n        v-for=\"tag in visitedViews\"\r\n        ref=\"refTag\"\r\n        :key=\"tag.path\"\r\n        v-slot=\"{ navigate }\"\r\n        :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\"\r\n        custom\r\n      >\r\n        <div\r\n          class=\"tags-view-item\"\r\n          :class=\"isActive(tag) ? 'active' : ''\"\r\n          @click.middle=\"!isAffix(tag) ? closeSelectedTag(tag) : ''\"\r\n          @contextmenu.prevent=\"openMenu(tag, $event)\"\r\n          @click=\"navigate\"\r\n        >\r\n          {{ langTitle(tag.title) }}\r\n          <Close v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\r\n        </div>\r\n      </router-link>\r\n    </div>\r\n    <ul v-show=\"visible\" :style=\"{ left: left + 'px', top: top + 'px' }\" class=\"contextmenu\">\r\n      <li @click=\"refreshSelectedTag(selectedTag)\">{{ langTitle('Refresh') }}</li>\r\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\">{{ langTitle('Close') }}</li>\r\n      <li @click=\"closeOthersTags\">{{ langTitle('Close Others') }}</li>\r\n      <li @click=\"closeAllTags(selectedTag)\">{{ langTitle('Close All') }}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { getCurrentInstance, nextTick, onMounted, reactive, toRefs, watch } from 'vue'\r\nimport { Close } from '@element-plus/icons-vue'\r\nimport { resolve } from 'path-browserify'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { storeToRefs } from 'pinia/dist/pinia'\r\nimport type { RouterTypes } from '~/basic'\r\nimport { useBasicStore } from '@/store/auth'\r\nimport { useTagsViewStore } from '@/store/tags-view'\r\nimport { langTitle } from '@/hooks/use-common'\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst state = reactive({\r\n  visible: false,\r\n  top: 0,\r\n  left: 0,\r\n  selectedTag: {},\r\n  affixTags: [] as RouterTypes\r\n})\r\n\r\nconst { visitedViews } = storeToRefs(useTagsViewStore())\r\n\r\nwatch(\r\n  () => route.path,\r\n  () => {\r\n    addTags()\r\n  }\r\n)\r\n\r\nwatch(\r\n  () => state.visible,\r\n  (value) => {\r\n    if (value) {\r\n      document.body.addEventListener('click', closeMenu)\r\n    } else {\r\n      document.body.removeEventListener('click', closeMenu)\r\n    }\r\n  }\r\n)\r\nonMounted(() => {\r\n  initTags()\r\n  addTags()\r\n})\r\n\r\n//判断当前点击的item项，是不是当前显示的路由项，如果是则高亮\r\nconst isActive = (param) => {\r\n  return route.path === param.path\r\n}\r\n//当路由设置meta.affix=true,关闭按钮消失\r\nconst isAffix = (tag) => {\r\n  return tag.meta && tag.meta.affix\r\n}\r\n\r\nconst filterAffixTags = (routes, basePath = '/') => {\r\n  let tags: RouterTypes = []\r\n  routes.forEach((route) => {\r\n    if (route.meta && route.meta.affix) {\r\n      const tagPath = resolve(basePath, route.path)\r\n      tags.push({\r\n        fullPath: tagPath,\r\n        path: tagPath,\r\n        name: route.name,\r\n        meta: { ...route.meta }\r\n      })\r\n    }\r\n    if (route.children) {\r\n      const tempTags = filterAffixTags(route.children, route.path)\r\n      if (tempTags.length >= 1) {\r\n        tags = [...tags, ...tempTags]\r\n      }\r\n    }\r\n  })\r\n  return tags\r\n}\r\n\r\n//初始\r\nconst tagsViewStore = useTagsViewStore()\r\nconst { allRoutes } = useBasicStore()\r\nconst initTags = () => {\r\n  //过滤affix=true的tags数组并赋值给state.affixTags，挂载到页面上\r\n  const affixTags = (state.affixTags = filterAffixTags(allRoutes))\r\n  for (const tag of affixTags) {\r\n    // Must have tag name\r\n    if (tag.name) {\r\n      tagsViewStore.addVisitedView(tag)\r\n    }\r\n  }\r\n}\r\nconst addTags = () => {\r\n  if (route?.name) {\r\n    tagsViewStore.addVisitedView(route)\r\n  }\r\n  return false\r\n}\r\n\r\n/*右键菜单部分*/\r\nconst vm = getCurrentInstance()?.proxy\r\n//右键打开菜单\r\nconst openMenu = (tag, e) => {\r\n  const menuMinWidth = 105\r\n  const offsetLeft = vm?.$el.getBoundingClientRect().left // container margin left\r\n  const offsetWidth = vm?.$el.offsetWidth // container width\r\n  const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n  const left = e.clientX - offsetLeft + 15 // 15: margin right\r\n\r\n  if (left > maxLeft) {\r\n    state.left = maxLeft\r\n  } else {\r\n    state.left = left\r\n  }\r\n  state.top = e.clientY\r\n  state.visible = true\r\n  state.selectedTag = tag\r\n}\r\n\r\nconst basicStore = useBasicStore()\r\n\r\n//关闭当前标签\r\nconst closeSelectedTag = (view) => {\r\n  tagsViewStore.delVisitedView(view).then((visitedViews) => {\r\n    if (isActive(view)) {\r\n      toLastView(visitedViews, view)\r\n    }\r\n    //remove keep-alive by the closeTabRmCache\r\n    if (view.meta?.closeTabRmCache) {\r\n      const routerLevel = view.matched.length\r\n      if (routerLevel === 2) {\r\n        basicStore.delCachedView(view.name)\r\n      }\r\n      if (routerLevel === 3) {\r\n        basicStore.setCacheViewDeep(view.name)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n//刷新标签\r\nconst refreshSelectedTag = (view) => {\r\n  const { fullPath } = view\r\n  nextTick(() => {\r\n    router.replace({\r\n      path: `/redirect${fullPath}`\r\n    })\r\n  })\r\n}\r\n\r\n//右键关闭菜单\r\nconst closeMenu = () => {\r\n  state.visible = false\r\n}\r\n//关闭其他标签\r\nconst closeOthersTags = () => {\r\n  router.push(state.selectedTag)\r\n  tagsViewStore.delOthersVisitedViews(state.selectedTag)\r\n}\r\n//关闭所有标签\r\nconst closeAllTags = (view) => {\r\n  tagsViewStore.delAllVisitedViews().then((visitedViews) => {\r\n    if (state.affixTags.some((tag) => tag.path === view.path)) {\r\n      return\r\n    }\r\n    toLastView(visitedViews, view)\r\n  })\r\n}\r\n//跳转最后一个标签\r\nconst toLastView = (visitedViews, view) => {\r\n  //visitedViews.at(-1)获取数组最后一个元素\r\n  const latestView = visitedViews.at(-1)\r\n  if (latestView) {\r\n    router.push(latestView.fullPath)\r\n  } else {\r\n    if (view.name === 'Dashboard') {\r\n      // to reload home page\r\n      router.replace({ path: `/redirect${view.fullPath}` })\r\n    } else {\r\n      router.push('/')\r\n    }\r\n  }\r\n}\r\n\r\n//export to page use\r\nconst { visible, top, left, selectedTag } = toRefs(state)\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tags-view-container {\r\n  height: var(--tag-view-height);\r\n  width: 100%;\r\n  background: var(--tags-view-background);\r\n  border-bottom: 1px solid var(--tags-view-border-bottom);\r\n  box-shadow: var(--tags-view-box-shadow);\r\n  .tags-view-wrapper {\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      position: relative;\r\n      cursor: pointer;\r\n      height: 27px;\r\n      line-height: 26px;\r\n      border: 1px solid var(--tags-view-item-border-color);\r\n      color: var(--tags-view-item-color);\r\n      background: var(--tags-view-item-background);\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n      margin-top: 3px;\r\n      &:first-of-type {\r\n        margin-left: 10px;\r\n      }\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n      &.active {\r\n        background-color: var(--tags-view-item-active-background);\r\n        color: var(--tags-view-item-active-color);\r\n        border-color: var(--tags-view-item-active-border-color);\r\n        &::before {\r\n          content: '';\r\n          background: var(--tags-view-background);\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          position: relative;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: var(--tags-view-contextmenu-background);\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: var(--tags-view-contextmenu-color);\r\n    box-shadow: var(--tags-view-contextmenu-box-shadow);\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background: var(--tags-view-contextmenu-hover-background);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n//reset element css of el-icon-close\r\n.tags-view-wrapper {\r\n  .tags-view-item {\r\n    border-radius: 3px;\r\n    .el-icon-close {\r\n      border-radius: 6px;\r\n      width: 12px;\r\n      height: 12px;\r\n      transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n      transform-origin: 100% 50%;\r\n      vertical-align: -2px;\r\n\r\n      &:hover {\r\n        background-color: var(--tags-view-close-icon-hover-background);\r\n        color: var(--tags-view-close-icon-hover-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div :class=\"classObj\" class=\"layout-wrapper\">\r\n    <!--left side-->\r\n    <div v-if=\"device =='mobile'&& sidebar.opened\" class=\"drawer-bg\" />\r\n    <Sidebar v-if=\"settings.showLeftMenu\" class=\"sidebar-container\" />\r\n    <!--right container-->\r\n    <div class=\"main-container\">\r\n      <Navbar v-if=\"settings.showTopNavbar\" />\r\n      <TagsView v-if=\"settings.showTagsView\" />\r\n      <AppMain />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { computed, onMounted } from 'vue'\r\nimport Sidebar from './sidebar/index.vue'\r\nimport AppMain from './app-main/index.vue'\r\nimport Navbar from './app-main/Navbar.vue'\r\nimport TagsView from './app-main/TagsView.vue'\r\nimport { useBasicStore } from '@/store/auth'\r\nimport { resizeHandler } from '@/hooks/use-layout'\r\nconst { device, sidebar, settings } = useBasicStore()\r\n\r\n\r\nconst mixins = [resizeHandler()];\r\n\r\n\r\n\r\nconst classObj = computed(() => {\r\n  return {\r\n    closeSidebar: !sidebar.opened,\r\n    hideSidebar: !settings.showLeftMenu,\r\n    withoutAnimation: sidebar.withoutAnimation,\r\n    mobile: device == 'mobile'\r\n  }\r\n}) \r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.layout-wrapper {\r\n  position: relative;\r\n  height: 100%;\r\n  width: 100%;\r\n  // &.mobile.openSidebar {\r\n  //   position: fixed;\r\n  //   top: 0;\r\n  // }\r\n}\r\n// .mobile {\r\n//   .main-container {\r\n//     margin-left: 0;\r\n//   }\r\n//   .sidebar-container {\r\n//     -webkit-transition: -webkit-transform .28s;\r\n//     transition: -webkit-transform .28s;\r\n//     transition: transform .28s;\r\n//     transition: transform .28s,-webkit-transform .28s;\r\n//     width: 210px!important;\r\n//   }\r\n// }\r\n.closeSidebar {\r\n    // position: fixed;\r\n    top: 0;\r\n}\r\n// .drawer-bg {\r\n//     background: #000;\r\n//     opacity: .3;\r\n//     width: 100%;\r\n//     top: 0;\r\n//     height: 100%;\r\n//     position: absolute;\r\n//     z-index: 999;\r\n// }\r\n.main-container {\r\n  min-height: 100%;\r\n  transition: margin-left var(--sideBar-switch-duration);\r\n  margin-left: var(--side-bar-width);\r\n  position: relative;\r\n}\r\n.sidebar-container {\r\n  transition: width var(--sideBar-switch-duration);\r\n  width: var(--side-bar-width) !important;\r\n  background-color: var(--el-menu-bg-color);\r\n  height: 100%;\r\n  position: fixed;\r\n  font-size: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1001;\r\n  overflow: hidden;\r\n  border-right: 0.5px solid var(--side-bar-border-right-color);\r\n}\r\n.closeSidebar {\r\n  .sidebar-container {\r\n    width: 0px !important;\r\n  }\r\n  .main-container {\r\n    margin-left: 0px !important;\r\n  }\r\n}\r\n.hideSidebar .fixed-header {\r\n  width: calc(100% - 0px)\r\n}\r\n.hideSidebar {\r\n  .sidebar-container {\r\n    width: 0 !important;\r\n  }\r\n  .main-container {\r\n    margin-left: 0;\r\n  }\r\n}\r\n</style>\r\n"],"names":["settings","useBasicStore","state","reactive","title","logo","toRefs","isExternal","path","resizeHandler","body","WIDTH","basicStore","isMobile","onBeforeMount","onMounted","onBeforeUnmount","type","computed","props","linkProps","to","onlyOneChild","ref","showSidebarItem","children","parent","showingChildren","item","resolvePath","routePath","resolve","allRoutes","sidebar","storeToRefs","route","useRoute","activeMenu","meta","cachedViews","key","oldRoute","cacheGroup","deepOldRouter","removeDeepChildren","_a","fItem","watch","routerLevel","_b","_c","_d","_e","_f","_g","parentRoute","_h","_i","_j","_k","_l","_m","cloneDeep","levelList","getBreadcrumb","matched","langTitle","pathCompile","params","compile","router","useRouter","handleLink","redirect","toggleClick","emit","setToggleSideBar","toggleSideBar","loginOut","elMessage","nextTick","resetState","visitedViews","useTagsViewStore","addTags","value","closeMenu","initTags","isActive","param","isAffix","tag","filterAffixTags","routes","basePath","tags","route2","tagPath","tempTags","tagsViewStore","affixTags","vm","getCurrentInstance","openMenu","e","offsetLeft","maxLeft","left2","closeSelectedTag","view","visitedViews2","toLastView","refreshSelectedTag","fullPath","closeOthersTags","closeAllTags","latestView","visible","top","left","selectedTag","device","classObj"],"mappings":"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"}