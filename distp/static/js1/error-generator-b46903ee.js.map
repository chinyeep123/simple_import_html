{"version":3,"file":"error-generator-b46903ee.js","sources":["../../../resources/js/views/error-log/error-generator.vue"],"sourcesContent":["<template>\r\n  <div class=\"scroll-y\">\r\n    <div class=\"mt-20px mb-5px font-bold\">throw unhandledrejection</div>\r\n    <el-button type=\"primary\" @click=\"handle\">unhandledrejection</el-button>\r\n\r\n    <div class=\"mt-20px mb-5px font-bold\">throw console.error</div>\r\n    <el-button type=\"primary\" @click=\"consoleErrorFun\">console.error</el-button>\r\n\r\n    <div class=\"mt-20px mb-5px font-bold\">throw normalError</div>\r\n    <el-button type=\"primary\" @click=\"normalError\">normalError</el-button>\r\n\r\n    <!--req relative-->\r\n    <div class=\"mt-20px mb-5px font-bold\">throw req cross origin</div>\r\n    <el-button type=\"primary\" @click=\"reqCrossOrigin\">reqCrossOrigin</el-button>\r\n    <div class=\"mt-20px mb-5px font-bold\">throw req 404 error</div>\r\n    <el-button type=\"primary\" @click=\"req404\">req404</el-button>\r\n    <!-- resource load error   -->\r\n    <div class=\"mt-20px mb-5px font-bold\">throw image load error</div>\r\n    <el-button type=\"primary\" @click=\"errorLogImg\">imageLoadError</el-button>\r\n    <!--image load error demo-->\r\n    <img v-if=\"imgShow\" src=\"http://img.png\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref } from 'vue'\r\nimport { useBasicStore } from '@/store/auth'\r\n\r\nconst basicStore = useBasicStore()\r\nconst settings = computed(() => {\r\n  return basicStore.settings || {}\r\n})\r\n\r\nconst handle = () => {\r\n  new Promise((resolve, reject) => {\r\n    reject('reject promise')\r\n  }).then((res) => {\r\n    console.log('ok')\r\n  })\r\n}\r\n\r\nconst flag = ref(null)\r\n\r\nconst consoleErrorFun = () => {\r\n  console.error('console.error')\r\n}\r\n\r\nconst normalError = () => {\r\n  throw new Error(' throw new Error(\"\")\\n')\r\n}\r\nconst reqCrossOrigin = () => {\r\n  axiosReq({\r\n    baseURL: 'https://github.jzfai.top/micro-service-test',\r\n    url: '/integration-front/brand/updateBy',\r\n    data: { id: 'fai' },\r\n    method: 'put',\r\n    isParams: true,\r\n    bfLoading: true\r\n  }).then(() => {})\r\n}\r\n\r\nconst req404 = () => {\r\n  axiosReq({\r\n    // baseURL: 'https://github.jzfai.top/micro-service-test',\r\n    url: '/integration-front/brand/updateBy1',\r\n    data: { id: 'fai' },\r\n    method: 'put',\r\n    isParams: true,\r\n    bfLoading: true\r\n  }).then((res) => {})\r\n  //the error will collection to unhandledrejection if you  no catch\r\n  // .catch((err) => {})\r\n}\r\n\r\n//img loader err test\r\nconst imgShow = ref(false)\r\nconst errorLogImg = () => {\r\n  imgShow.value = !imgShow.value\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\"></style>\r\n"],"names":["basicStore","useBasicStore","computed","handle","resolve","reject","res","ref","consoleErrorFun","normalError","reqCrossOrigin","req404","imgShow","errorLogImg"],"mappings":"oxBA4BA,MAAAA,EAAAC,EAAA,EACAC,EAAA,IACAF,EAAA,UAAA,CAAA,CACA,EAEA,MAAAG,EAAA,IAAA,CACA,IAAA,QAAA,CAAAC,EAAAC,IAAA,CACAA,EAAA,gBAAA,CACA,CAAA,EAAA,KAAAC,GAAA,CACA,QAAA,IAAA,IAAA,CACA,CAAA,CACA,EAEAC,EAAA,IAAA,EAEA,MAAAC,EAAA,IAAA,CACA,QAAA,MAAA,eAAA,CACA,EAEAC,EAAA,IAAA,CACA,MAAA,IAAA,MAAA;AAAA,CAAA,CACA,EACAC,EAAA,IAAA,CACA,SAAA,CACA,QAAA,8CACA,IAAA,oCACA,KAAA,CAAA,GAAA,KAAA,EACA,OAAA,MACA,SAAA,GACA,UAAA,EACA,CAAA,EAAA,KAAA,IAAA,EAAA,CACA,EAEAC,EAAA,IAAA,CACA,SAAA,CAEA,IAAA,qCACA,KAAA,CAAA,GAAA,KAAA,EACA,OAAA,MACA,SAAA,GACA,UAAA,EACA,CAAA,EAAA,KAAAL,GAAA,EAAA,CAGA,EAGAM,EAAAL,EAAA,EAAA,EACAM,EAAA,IAAA,CACAD,EAAA,MAAA,CAAAA,EAAA,KACA"}