{"version":3,"file":"Dashboard-7a8c5e6f.js","sources":["../../../resources/js/utils/request.js","../../../resources/js/api/product/index.js","../../../resources/js/components/Pagination/index.vue","../../../resources/js/views/Dashboard.vue"],"sourcesContent":["import axios from \"axios\";\r\nimport { ElLoading, ElMessage, ElMessageBox } from \"element-plus\";\r\nimport { useBasicStore } from \"@/store/auth\";\r\nimport { langTitle } from \"@/hooks/use-common\";\r\n\r\n//使用axios.create()创建一个axios请求实例\r\nconst service = axios.create();\r\nlet loadingInstance = null; //loading实例\r\n//请求前拦截\r\nservice.interceptors.request.use(\r\n    (req) => {\r\n        const { token, axiosPromiseArr } = useBasicStore();\r\n        //axiosPromiseArr收集请求地址,用于取消请求\r\n        req.cancelToken = new axios.CancelToken((cancel) => {\r\n            axiosPromiseArr.push({\r\n                url: req.url,\r\n                cancel,\r\n            });\r\n        });\r\n        //设置token到header\r\n        req.headers[\"AUTHORIZE_TOKEN\"] = token;\r\n        //如果req.method给get 请求参数设置为 ?name=xxx\r\n        if (\"get\".includes(req.method?.toLowerCase())) req.params = req.data;\r\n        //req loading\r\n        // @ts-ignore\r\n        if (req.reqLoading ?? true) {\r\n            loadingInstance = ElLoading.service({\r\n                lock: true,\r\n                fullscreen: true,\r\n                // spinner: 'CircleCheck',\r\n                text: \"loading...\",\r\n                background: \"rgba(0, 0, 0, 0.3)\",\r\n            });\r\n        }\r\n\r\n        return req;\r\n    },\r\n    (err) => {\r\n        //发送请求失败\r\n        Promise.reject(err);\r\n    }\r\n);\r\n//请求后拦截\r\nservice.interceptors.response.use(\r\n    (res) => {\r\n        if (loadingInstance) {\r\n            loadingInstance && loadingInstance.close();\r\n        }\r\n\r\n        //download file\r\n        if (\r\n            [\"application/zip\", \"zip\", \"blob\", \"arraybuffer\"].includes(\r\n                res.headers[\"content-type\"]\r\n            )\r\n        ) {\r\n            return res;\r\n        }\r\n        const { code, msg } = res.data;\r\n        const successCode = \"0,200,20000\";\r\n        const noAuthCode = \"401,403\";\r\n\r\n        if (successCode.includes(res.status)) {\r\n            return res;\r\n        } else {\r\n            if (noAuthCode.includes(code)) {\r\n                ElMessageBox.confirm(langTitle(\"relogin_title\"), {\r\n                    confirmButtonText: langTitle(\"relogin\"),\r\n                    closeOnClickModal: false,\r\n                    showCancelButton: false,\r\n                    showClose: false,\r\n                    type: \"warning\",\r\n                }).then(() => {\r\n                    useBasicStore().resetStateAndToLogin();\r\n                });\r\n            }\r\n            // @ts-ignore\r\n            if (!res.config?.isNotTipErrorMsg) {\r\n                ElMessage.error({\r\n                    message: msg,\r\n                    duration: 2 * 1000,\r\n                });\r\n            }\r\n            return Promise.reject(msg);\r\n        }\r\n    },\r\n    //响应报错\r\n    (err) => {\r\n        if (loadingInstance) {\r\n            loadingInstance && loadingInstance.close();\r\n        }\r\n        ElMessage.error({\r\n            message: err,\r\n            duration: 2 * 1000,\r\n        });\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default function request(config) {\r\n    return service({\r\n        baseURL: \"/\",\r\n        timeout: 8000,\r\n        ...config,\r\n    });\r\n}\r\n","import request from \"@/utils/request\";\r\n\r\nexport const listProducts = (queryParams) => {\r\n    return request({\r\n        url: \"/api/products\",\r\n        method: \"get\",\r\n        params: queryParams,\r\n    });\r\n};\r\n\r\nexport const importProducts = (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    return request({\r\n        url: \"/api/products/import\",\r\n        method: \"post\",\r\n        data: formData,\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n    });\r\n};\r\n\r\nexport function downloadTemplate() {\r\n    return request({\r\n        url: \"/api/products/import/template/download\",\r\n        method: \"get\",\r\n        responseType: \"arraybuffer\",\r\n    });\r\n}\r\n","<template>\r\n  <div :class=\"{ hidden: hidden }\" class=\"pagination-container\">\r\n    <el-pagination\r\n      :background=\"background\"\r\n      v-model:current-page=\"currentPage\"\r\n      v-model:page-size=\"pageSize\"\r\n      :layout=\"layout\"\r\n      :page-sizes=\"pageSizes\"\r\n      :total=\"total\"\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, PropType } from 'vue';\r\n\r\nconst props = defineProps({\r\n  total: {\r\n    required: true,\r\n    type: Number as PropType<number>,\r\n    default: 0\r\n  },\r\n  page: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  limit: {\r\n    type: Number,\r\n    default: 20\r\n  },\r\n  pageSizes: {\r\n    type: Array as PropType<number[]>,\r\n    default() {\r\n      return [10, 20, 30, 50];\r\n    }\r\n  },\r\n  layout: {\r\n    type: String,\r\n    default: 'total, sizes, prev, pager, next, jumper'\r\n  },\r\n  background: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  autoScroll: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  hidden: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['update:page', 'update:limit', 'pagination']);\r\n\r\nconst currentPage = computed<number | undefined>({\r\n  get: () => props.page,\r\n  set: value => {\r\n    emit('update:page', value);\r\n  }\r\n});\r\n\r\nconst pageSize = computed<number | undefined>({\r\n  get() {\r\n    return props.limit;\r\n  },\r\n  set(val) {\r\n    emit('update:limit', val);\r\n  }\r\n});\r\n\r\nfunction handleSizeChange(val: number) {\r\n  emit('pagination', { page: currentPage, limit: val });\r\n  if (props.autoScroll) {\r\n  }\r\n}\r\n\r\nfunction handleCurrentChange(val: number) {\r\n  currentPage.value = val;\r\n  emit('pagination', { page: val, limit: props.limit });\r\n  if (props.autoScroll) {\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pagination-container {\r\n  background: #fff;\r\n  padding: 32px 16px;\r\n}\r\n\r\n.pagination-container.hidden {\r\n  display: none;\r\n}\r\n</style>\r\n","\r\n<template>\r\n  <div class=\"app-container\">\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"24\">\r\n        <el-card shadow=\"never\">\r\n          <template #header>\r\n            <el-form-item>\r\n              <el-dropdown split-button>\r\n                Import\r\n                <template #dropdown>\r\n                  <el-dropdown-menu>\r\n                    <el-dropdown-item\r\n                      :icon=\"Download\"\r\n                      @click=\"handleDownloadTemplate\"\r\n                      >Download Sample</el-dropdown-item\r\n                    >\r\n                    <el-dropdown-item :icon=\"Top\" @click=\"showImportDialog\"\r\n                      >Import</el-dropdown-item\r\n                    >\r\n                  </el-dropdown-menu>\r\n                </template>\r\n              </el-dropdown>\r\n            </el-form-item>\r\n          </template>\r\n\r\n          <el-table\r\n            v-loading=\"loading\"\r\n            :data=\"productList\"\r\n            @selection-change=\"handleSelectionChange\"\r\n          >\r\n            <template #header>\r\n              <el-input v-model=\"search\" size=\"small\" placeholder=\"Type to search\" />\r\n            </template>\r\n            <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\r\n            <el-table-column\r\n              key=\"id\"\r\n              label=\"ID\"\r\n              align=\"center\"\r\n              prop=\"id\"\r\n              width=\"100\"\r\n            />\r\n            <el-table-column\r\n              key=\"product_id\"\r\n              label=\"Product ID\"\r\n              align=\"center\"\r\n              prop=\"product_id\"\r\n            />\r\n            <el-table-column\r\n              key=\"type\"\r\n              label=\"Types\"\r\n              align=\"center\"\r\n              prop=\"type\"\r\n            />\r\n            <el-table-column\r\n              key=\"brand\"\r\n              label=\"Brand\"\r\n              align=\"center\"\r\n              prop=\"brand\"\r\n            />\r\n            <el-table-column\r\n              key=\"model\"\r\n              label=\"Model\"\r\n              align=\"center\"\r\n              prop=\"model\"\r\n            />\r\n            <el-table-column\r\n              key=\"capacity\"\r\n              label=\"Capacity\"\r\n              align=\"center\"\r\n              prop=\"capacity\"\r\n            />\r\n            <el-table-column\r\n              key=\"quantity\"\r\n              label=\"Quantity\"\r\n              align=\"center\"\r\n              prop=\"quantity\"\r\n            />\r\n          </el-table>\r\n\r\n          <pagination\r\n            v-if=\"total > 0\"\r\n            :total=\"total\"\r\n            v-model:page=\"queryParams.pageNum\"\r\n            v-model:limit=\"queryParams.pageSize\"\r\n            @pagination=\"handleQuery\"\r\n          />\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- import dialog -->\r\n    <el-dialog\r\n      :title=\"importDialog.title\"\r\n      v-model=\"importDialog.visible\"\r\n      width=\"600px\"\r\n      append-to-body\r\n      @close=\"closeImportDialog\"\r\n    >\r\n      <el-form\r\n        ref=\"importFormRef\"\r\n        :model=\"importFormData\"\r\n        :rules=\"rules\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"Excel\">\r\n          <el-upload\r\n            class=\"upload-demo\"\r\n            action=\"\"\r\n            drag\r\n            :auto-upload=\"false\"\r\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            :file-list=\"excelFilelist\"\r\n            :on-change=\"handleExcelChange\"\r\n            :limit=\"1\"\r\n          >\r\n            <el-icon class=\"el-icon--upload\">\r\n              <upload-filled />\r\n            </el-icon>\r\n            <div class=\"el-upload__text\">\r\n              Drop your file here or\r\n              <em>click to upload</em>\r\n            </div>\r\n            <template #tip>\r\n              <div class=\"el-upload__tip\">xls/xlsx files</div>\r\n            </template>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button type=\"primary\" @click=\"submitImportForm\">Confirm</el-button>\r\n          <el-button @click=\"closeImportDialog\">Cancel</el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  reactive,\r\n  ref,\r\n  watchEffect,\r\n  onMounted,\r\n  getCurrentInstance,\r\n  toRefs,\r\n  computed\r\n} from 'vue';\r\n\r\n// api\r\nimport {\r\n  listProducts,\r\n  importProducts,\r\n  downloadTemplate\r\n} from '@/api/product'\r\n\r\nimport {\r\n  ElTree,\r\n  ElForm,\r\n  ElMessageBox,\r\n  ElMessage,\r\n  UploadFile\r\n} from 'element-plus';\r\nimport {\r\n  Plus,\r\n  Refresh,\r\n  Delete,\r\n  Download,\r\n  Top,\r\n  UploadFilled\r\n} from '@element-plus/icons-vue';\r\n\r\nimport Pagination from '@/components/Pagination/index.vue';\r\n\r\nconst queryFormRef = ref(ElForm); \r\nconst dataFormRef = ref(ElForm); \r\nconst importFormRef = ref(ElForm); \r\nconst search = ref('')\r\nconst filterTableData = computed(() =>\r\n  productList.value.filter(\r\n    (data) =>\r\n      !search.value ||\r\n      data.name.toLowerCase().includes(search.value.toLowerCase())\r\n  )\r\n)\r\n\r\nconst { proxy }: any = getCurrentInstance();\r\n\r\nconst state = reactive({\r\n  // 遮罩层\r\n  loading: true,\r\n  // 选中数组\r\n  ids: [] as number[],\r\n  // 总条数\r\n  total: 0,\r\n  productList: [],\r\n  dialog: {\r\n    visible: false\r\n  } as DialogType,\r\n  queryParams: {\r\n    pageNum: 1,\r\n    pageSize: 10\r\n  } ,\r\n  rules: {\r\n  },\r\n\r\n  importDialog: {\r\n    title: 'Product Import',\r\n    visible: false\r\n  } as DialogType,\r\n  importFormData: {},\r\n  excelFile: undefined as any,\r\n  excelFilelist: [] as File[]\r\n});\r\n\r\nconst {\r\n  ids,\r\n  loading,\r\n  queryParams,\r\n  productList,\r\n  total,\r\n  dialog,\r\n  rules,\r\n  importDialog,\r\n  importFormData,\r\n  excelFilelist\r\n} = toRefs(state);\r\n\r\n/**\r\n * handle query\r\n */\r\nfunction handleQuery() {\r\n  state.loading = true;\r\n  listProducts(state.queryParams).then(({ data }) => {\r\n    state.productList = data.data;\r\n    state.total = data.meta.total;\r\n    state.loading = false;\r\n  });\r\n}\r\n\r\nfunction handleSelectionChange(selection: any) {\r\n  state.ids = selection.map((item: any) => item.id);\r\n}\r\n\r\n/**\r\n * download sample excel\r\n */\r\nfunction handleDownloadTemplate() {\r\n  downloadTemplate().then((response: any) => {\r\n    const blob = new Blob([response.data], {\r\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8'\r\n    });\r\n    const a = document.createElement('a');\r\n    const href = window.URL.createObjectURL(blob); // 下载链接\r\n    a.href = href;\r\n    a.download = decodeURI(\r\n      response.headers['content-disposition'].split(';')[1].split('=')[1]\r\n    ); // 获取后台设置的文件名称\r\n    document.body.appendChild(a);\r\n    a.click(); // 点击下载\r\n    document.body.removeChild(a); // 下载完成移除元素\r\n    window.URL.revokeObjectURL(href); // 释放掉blob对象\r\n  });\r\n}\r\n\r\n/**\r\n * show import\r\n */\r\nasync function showImportDialog() {\r\n  importDialog.value.visible = true;\r\n}\r\n\r\n/**\r\n * handle excel change\r\n *\r\n * @param file\r\n */\r\nfunction handleExcelChange(file: UploadFile) {\r\n  if (!/\\.(xlsx|xls|XLSX|XLS)$/.test(file.name)) {\r\n    ElMessage.warning('upload file must be Excel format ex: xlsx, xls');\r\n    state.excelFile = undefined;\r\n    state.excelFilelist = [];\r\n    return false;\r\n  }\r\n  state.excelFile = file.raw;\r\n}\r\n\r\n/**\r\n * upload file\r\n */\r\nfunction submitImportForm() {\r\n  importFormRef.value.validate((valid: any) => {\r\n    if (valid) {\r\n      if (!state.excelFile) {\r\n        ElMessage.warning('import excel file cannot be empty');\r\n        return false;\r\n      }\r\n\r\n      importProducts(state.excelFile).then(response => {\r\n        ElMessage.success(response.data);\r\n        closeImportDialog();\r\n        handleQuery();\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * close import dialog\r\n */\r\nfunction closeImportDialog() {\r\n  state.importDialog.visible = false;\r\n  state.excelFile = undefined;\r\n  state.excelFilelist = [];\r\n  importFormRef.value.resetFields();\r\n}\r\n\r\nonMounted(() => {\r\n  handleQuery();\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nhtml.base-theme .el-button + .el-button {\r\n  margin-left: 0;\r\n}\r\n</style>"],"names":["service","axios","loadingInstance","req","token","axiosPromiseArr","useBasicStore","cancel","_a","_b","ElLoading","err","res","code","msg","successCode","noAuthCode","ElMessageBox","langTitle","ElMessage","request","config","listProducts","queryParams","importProducts","file","formData","downloadTemplate","currentPage","computed","props","value","emit","pageSize","val","handleSizeChange","handleCurrentChange","ref","ElForm","importFormRef","search","productList","data","state","reactive","ids","loading","total","dialog","rules","importDialog","importFormData","excelFilelist","toRefs","handleQuery","handleSelectionChange","selection","item","handleDownloadTemplate","response","blob","a","href","showImportDialog","handleExcelChange","submitImportForm","valid","closeImportDialog","onMounted"],"mappings":"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"}